{"version":3,"file":"_table_-CYwzGQfW.js","sources":["../../src/components/ui/dialog.tsx","../../src/components/ui/table.tsx","../../src/components/ui/badge.tsx","../../src/pages/sqlite/[table].tsx"],"sourcesContent":["import * as React from \"react\";\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\";\n// import { X } from \"lucide-react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst Dialog = DialogPrimitive.Root;\n\nconst DialogTrigger = DialogPrimitive.Trigger;\n\nconst DialogPortal = DialogPrimitive.Portal;\n\nconst DialogClose = DialogPrimitive.Close;\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n));\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName;\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"outline-none fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      {/* <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close> */}\n    </DialogPrimitive.Content>\n  </DialogPortal>\n));\nDialogContent.displayName = DialogPrimitive.Content.displayName;\n\nconst DialogHeader = ({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) => (\n  <div className={cn(\"flex flex-col space-y-1.5 text-center sm:text-left\", className)} {...props} />\n);\nDialogHeader.displayName = \"DialogHeader\";\n\nconst DialogFooter = ({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) => (\n  <div className={cn(\"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\", className)} {...props} />\n);\nDialogFooter.displayName = \"DialogFooter\";\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold leading-none tracking-tight\", className)}\n    {...props}\n  />\n));\nDialogTitle.displayName = DialogPrimitive.Title.displayName;\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description ref={ref} className={cn(\"text-sm text-muted-foreground\", className)} {...props} />\n));\nDialogDescription.displayName = DialogPrimitive.Description.displayName;\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogTrigger,\n  DialogClose,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n};\n","import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-10 px-2 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\n      \"p-2 align-middle [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n      className\n    )}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-md border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground shadow hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground shadow hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","import { useSqliteStore } from \"@/util/sqliteStore\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useShallow } from \"zustand/react/shallow\";\n\nimport { AgGridReact } from \"ag-grid-react\";\nimport SQLiteLayout from \"./_layout\";\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from \"@/components/ui/dialog\";\nimport { Table, TableBody, TableCaption, TableCell, TableRow } from \"@/components/ui/table\";\nimport { Badge } from \"@/components/ui/badge\";\n\nenum ValueType {\n  Token = \"Token\",\n  Route = \"Route\",\n  Network = \"Network\",\n  Event = \"Event\",\n  Unknown = \"Unknown\",\n}\n\nfunction bringColumnsValuesToItem(columns: string[], values: any[]) {\n  const res: Record<string, any> = {};\n  for (let i = 0; i < columns.length; i++) {\n    const columnName = columns[i];\n    const value = values[i];\n    res[columnName] = value;\n  }\n  return res;\n}\n\nexport default function TablePage() {\n  const params = useParams();\n  const navigate = useNavigate();\n  const { db } = useSqliteStore(\n    useShallow((state) => ({\n      db: state.db,\n    }))\n  );\n\n  const tableName = params.table;\n\n  useEffect(() => {\n    if (!tableName || !db) {\n      navigate(\"/\");\n    }\n  }, [tableName, db]);\n\n  if (!tableName) return <></>;\n  if (!db) return <></>;\n\n  const res = db.exec(`SELECT * FROM ${tableName};`)[0];\n\n  const columnDefs = res.columns.map((column) => ({\n    field: column,\n  }));\n  let rowsData = [];\n  for (const values of res.values) {\n    const rowData = bringColumnsValuesToItem(res.columns, values);\n    rowsData.push(rowData);\n  }\n\n  const [selectedItems, setSelectedItems] = useState<{ table: string; item: Record<string, any> }[]>([]);\n\n  const popSelectedItem = () => {\n    const newSelectedItems = selectedItems.slice(0, selectedItems.length - 1);\n    setSelectedItems(newSelectedItems);\n  };\n\n  const pushSelectedItem = (item: (typeof selectedItems)[0]) => {\n    const newSelectedItems = [...selectedItems, item];\n    setSelectedItems(newSelectedItems);\n  };\n\n  const itemToDisplay = selectedItems.length > 0 ? selectedItems[selectedItems.length - 1] : null;\n\n  const getElement = (value: any, valueType: ValueType) => {\n    if (Array.isArray(value)) return getArrayElement(value, valueType);\n    if (typeof value === \"object\") return getObjectElement(value, valueType);\n    return `${value}`;\n  };\n\n  const getArrayElement = (values: any[], valueType: ValueType) => {\n    return (\n      <div className=\"flex flex-col gap-1\">\n        <div>Array of {values.length}:</div>\n        <div className=\"flex flex-row gap-1 flex-wrap\">\n          {values.map((value) => {\n            if (typeof value === \"string\" || typeof value === \"number\") {\n              return renderValueWithType(value, valueType);\n            }\n            return <Badge variant={\"secondary\"}>{getElement(value, valueType)}</Badge>;\n          })}\n        </div>\n      </div>\n    );\n  };\n\n  const getObjectElement = (data: Record<string, any>, valueType: ValueType) => {\n    return (\n      <Table>\n        <TableBody>\n          {Object.entries(data).map(([key, value]) => (\n            <TableRow key={key}>\n              <TableCell className=\"text-nowrap font-medium\">{key}</TableCell>\n              <TableCell className=\"break-all\">{getElement(value, valueType)}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    );\n  };\n\n  const getValueType = (key: string) => {\n    if ([\"eventId\"].includes(key)) return ValueType.Event;\n    if ([\"tokenId\"].includes(key)) return ValueType.Token;\n    if ([\"routesAIdsJsonList\", \"routesBIdsJsonList\", \"dependantRoutesIdsJsonList\"].includes(key))\n      return ValueType.Route;\n    if ([\"networkId\", \"greenNetwork\", \"redNetwork\", \"networkA\", \"networkB\"].includes(key)) return ValueType.Network;\n    return ValueType.Unknown;\n  };\n\n  const renderValueWithType = (value: any, type: ValueType) => {\n    if (type === ValueType.Unknown) return <Badge variant={\"outline\"}>{value}</Badge>;\n\n    return (\n      <Badge\n        variant={\"outline\"}\n        className=\"cursor-pointer bg-blue-300/10 hover:bg-blue-500/30\"\n        onClick={() => {\n          const tableToFetch = type;\n          const res = db.exec(`SELECT * FROM ${tableToFetch} WHERE id = \"${value}\"`)[0];\n          const item = bringColumnsValuesToItem(res.columns, res.values[0]);\n          pushSelectedItem({\n            table: tableToFetch,\n            item: item,\n          });\n        }}\n      >\n        {value}\n      </Badge>\n    );\n  };\n\n  const getTableItemElement = (key: string, value: any) => {\n    const valueType = getValueType(key);\n    try {\n      if (key.endsWith(\"JsonList\")) {\n        return getElement(JSON.parse(value), valueType);\n      }\n      if (key.endsWith(\"Json\")) {\n        return getElement(JSON.parse(value), valueType);\n      }\n\n      if (value === null) return \"\";\n      const stringValue = `${value}`;\n      if (stringValue.length === 0) return ``;\n      return renderValueWithType(value, valueType);\n    } catch (e) {\n      return value;\n    }\n  };\n\n  return (\n    <SQLiteLayout>\n      <div className=\"ag-theme-quartz min-h-[100vh] flex-1 rounded-xl bg-muted/50 md:min-h-min\">\n        <Dialog open={selectedItems.length > 0}>\n          <DialogContent\n            className=\"max-h-[80vh] overflow-y-scroll w-3/4 max-w-5xl\"\n            onInteractOutside={() => popSelectedItem()}\n            onEscapeKeyDown={() => popSelectedItem()}\n          >\n            <DialogHeader>\n              <DialogTitle className=\"mb-2\">Viewing {itemToDisplay?.table} entry</DialogTitle>\n              <Table className=\"w-full\">\n                <TableCaption>End of {itemToDisplay?.table} entry</TableCaption>\n                <TableBody>\n                  {itemToDisplay &&\n                    Object.entries(itemToDisplay.item).map(([key, value]) => (\n                      <TableRow key={key}>\n                        <TableCell className=\"font-medium\">{key}</TableCell>\n                        <TableCell className=\"break-all\">{getTableItemElement(key, value)}</TableCell>\n                      </TableRow>\n                    ))}\n                </TableBody>\n              </Table>\n            </DialogHeader>\n          </DialogContent>\n        </Dialog>\n        <AgGridReact\n          columnDefs={columnDefs}\n          rowData={rowsData}\n          pagination={true}\n          defaultColDef={{\n            filter: true,\n            enableRowGroup: true,\n          }}\n          rowGroupPanelShow={\"always\"}\n          alwaysShowHorizontalScroll={true}\n          paginationAutoPageSize={true}\n          rowClass=\"cursor-pointer\"\n          onRowClicked={(e) => {\n            if (e.data) {\n              pushSelectedItem({\n                table: tableName,\n                item: e.data,\n              });\n            }\n          }}\n        />\n      </div>\n    </SQLiteLayout>\n  );\n}\n"],"names":["Dialog","DialogPrimitive.Root","DialogPortal","DialogPrimitive.Portal","DialogOverlay","React.forwardRef","className","props","ref","jsx","DialogPrimitive.Overlay","cn","DialogContent","children","jsxs","DialogPrimitive.Content","DialogHeader","DialogTitle","DialogPrimitive.Title","DialogDescription","DialogPrimitive.Description","Table","TableHeader","TableBody","TableFooter","TableRow","TableHead","TableCell","TableCaption","badgeVariants","cva","Badge","variant","bringColumnsValuesToItem","columns","values","res","columnName","value","TablePage","params","useParams","navigate","useNavigate","db","useSqliteStore","useShallow","state","tableName","useEffect","Fragment","columnDefs","column","rowsData","rowData","selectedItems","setSelectedItems","useState","popSelectedItem","newSelectedItems","pushSelectedItem","item","itemToDisplay","getElement","valueType","getArrayElement","getObjectElement","renderValueWithType","data","key","getValueType","type","tableToFetch","getTableItemElement","SQLiteLayout","AgGridReact","e"],"mappings":"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"}